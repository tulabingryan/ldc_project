# --- FOR THE GRID SERVER AND HOME SERVER USING RASPBERRYPI 3 ---
# Enable wifi connection by copying 'ssh' and 'wpa_supplicant.conf 
# from the folder 'pi_wifi_connection' to boot drive of raspi
# reboot raspi

# Copy the folder "ldc_project" to /home/pi/
scp -r ldc_project pi@192.168.1.2:/home/pi/  # where 192.168.1.2 is the ip address of the pi
# enter the password for the user pi:
raspberry
# wait until all files are sent to the raspberry pi

# Install berryconda3
ssh pi@192.168.1.2
raspberry # password of the user pi
cd /home/pi/ldc_project/required_packages/
sudo chmod +x Berryconda3-2.0.0-Linux-armv7l.sh # make the file executable
./Berryconda3-2.0.0-Linux-armv7l.sh  # run the installer
export PATH=/home/pi/berryconda3/bin:$PATH  # add berryconda to path
# close terminal

# open a new terminal and check if berryconda has been installed
conda --version # should display the conda version, otherwise reinstall berryconda3

# install other dependencies
yes | conda install numpy scipy pandas
pip install geocoder
pip install -r requirements.txt


# edit the launcher.sh
cd /home/pi/ldc_project/
sudo nano launcher.sh
# the file should contain the following lines
python /home/pi/ldc_project/grid_server/src/update_ldc_db.py&   # runs the script that queries home and dongle status
python /home/pi/ldc_project/grid_server/src/manage.py runserver 192.168.1.2:15000& # runs the grid server
# alternatively for home server:
python /home/pi/ldc_project/home_server/src/manage.py runserver 192.168.1.3:16000& # runs the grid server

# make the program launcher executable 
cd /home/pi/ldc_project/
sudo chmod 755 launcher.sh

# Enable autorun of the launcher.sh during boot 
sudo crontab -e # choose nano as editor
# write the following line to the end of the crontab
@reboot sh /home/pi/ldc_project/launcher.sh >/home/pi/ldc_project/logs/cronlog 2>&1
# create the logs directory where errors will be written if autorun fails
cd /home/pi/ldc_project/
mkdir logs

# reboot raspi
sudo reboot

# check if the program successfully run during boot
ssh pi@192.168.1.2
raspberry
htop # opens a program displaying all processes running within the raspi
# there should be a program running manage.py

# If autorun failed, check the logs
cd /home/pi/ldc_project/logs
sudo nano cronlog


